sys_prompt: |
  You are **KDQOL-Retriever-Code**, an assistant designed to help physicians accurately convert patient responses from KDQOL into corresponding scores. Follow these guidelines strictly:

  1. **Understand the Request:** Precisely identify the information the physician is asking for. Pay close attention to the specific data or insights required.
  2. **Select Relevant Questions:** Carefully examine the provided questionnaire and identify the question that is most relevant to the physician's request. Only select one question that directly relates to the required information.
  3. **Score Mapping:** Write Python code to convert the answer from the selected questions into corresponding scores. Clearly explain how each score is determined by providing comments in the code.
  4. **DataFrame Generation:** Write Python code to make a dataframe of the mapped answers. Ensure that every step in the process is meticulously detailed and include comments that describe what each section of the code does.

  Your goal is to ensure that the Python code you generate is both accurate and relevant, with clear and transparent scoring calculations. Always include comments to explain each part of the code.
usr_prompt1: |
  You will given <KDQOL>, <Score Mapping Dictionary>, and <Physician's queries>.
  
  - **<KDQOL>**: The form of KDQOL survey, which assesses the quality of life in kidney dialysis patients.
  - **<Score Mapping Dictionary>**: A guide on how to convert each response of every survey item into their corresponding scores. The higher score indicates a better quality of life.
  - **<Physician's queries>**: The queries requested by the physician that are clinically important and need to be answered using the KDQOL survey.

  Based on the provided <KDQOL>, select the most relevant question that directly relates to the <Physician's queries>.
  You must describe how and why you selected the questions.
  Write Python code to convert the answer from the selected question into corresponding scores using <Score Mapping Dictionary>.
usr_prompt2: |
  <Score mapping dictionary>
  {'1': {'Poor': 0.0, 'Fair': 25.0, 'Good': 50.0, 'Very good': 75.0, 'Excellent': 100.0}, 
  '2': {'Much worse now than one year ago': 0.0, 'Somewhat worse now than one year ago': 25.0, 'About the same than one year ago': 50.0, 'Somewhat better now than one year ago': 75.0, 'Much better now than one year ago': 100.0}, 
  '3': {'Yes, limited a lot': 0.0, 'Yes, limited a little': 50.0, 'No, not limited at all': 100.0}, 
  '4 / 5': {'Yes': 0.0, 'No': 100.0},
  '6': {'Extremely': 0.0, 'Quite a bit': 25.0, 'Moderately': 50.0, 'Slightly': 75.0, 'Not at all': 100.0}, 
  '7': {'Very severe': 0.0, 'Severe': 20.0, 'Moderate': 40.0, 'Mild': 60.0, 'Very mild': 80.0, 'None': 100.0}, 
  '8': {'Extremely': 0.0, 'Quite a bit': 25.0, 'Moderately': 50.0, 'A little bit': 75.0, 'Not at all': 100.0}, 
  '9 a,d,e,h': {'None of the time': 0.0, 'A little of the time': 20.0, 'Some of the time': 40.0, 'A good bit of the time': 60.0, 'Most of the time': 80.0, 'All of the time': 100.0}, 
  '9 b,c,f,g,i': {'All of the time': 0.0, 'Most of the time': 20.0, 'A good bit of the time': 40.0, 'Some of the time': 60.0, 'A little of the time': 80.0, 'None of the time': 100.0}, 
  '10': {'All of the time': 0.0, 'Most of the time': 25.0, 'Some of the time': 50.0, 'A little of the time': 75.0, 'None of the time': 100.0}, 
  '11 a,c': {'Definitely true': 0.0, 'Mostly true': 25.0, 'Don\'t know': 50.0, 'Mostly false': 75.0, 'Definitely false': 100.0}, 
  '11 b,d': {'Definitely false': 0.0, 'Mostly false': 25.0, 'Don\'t know': 50.0, 'Mostly true': 75.0, 'Definitely true': 100.0}, 
  '12': {'Definitely true': 0.0, 'Mostly true': 25.0, 'Don\'t know': 50.0, 'Mostly false': 75.0, 'Definitely false': 100.0}, 
  '13 a-d, f': {'All of the time': 0.0, 'Most of the time': 20.0, 'A good bit of the time': 40.0, 'Some of the time': 60.0, 'A little of the time': 80.0, 'None of the time': 100.0}, 
  '13 e': {'None of the time': 0.0, 'A little of the time': 20.0, 'Some of the time': 40.0, 'A good bit of the time': 60.0, 'Most of the time': 80.0, 'All of the time': 100.0}, 
  '14': {'Extremely bothered': 0.0, 'Very much bothered': 25.0, 'Moderately bothered': 50.0, 'Somewhat bothered': 75.0, 'Not at all bothered': 100.0}, 
  '15': {'Extremely bothered': 0.0, 'Very much bothered': 25.0, 'Moderately bothered': 50.0, 'Somewhat bothered': 75.0, 'Not at all bothered': 100.0}, 
  '16': {'No': 0.0, 'Yes': 100.0}, 
  '16 a,b': {'Severe problem': 0.0, 'Very much a problem': 25.0, 'Somewhat of a problem': 50.0, 'A little problem': 75.0, 'Not a problem': 100.0}, 
  '18 a,c': {'All of the time': 0.0, 'Most of the time': 20.0, 'A good bit of the time': 40.0, 'Some of the time': 60.0, 'A little of the time': 80.0, 'None of the time': 100.0}, 
  '18 b': {'None of the time': 0.0, 'A little of the time': 20.0, 'Some of the time': 40.0, 'A good bit of the time': 60.0, 'Most of the time': 80.0, 'All of the time': 100.0}, 
  '19': {'Very dissatisfied': 0.0, 'Somewhat dissatisfied': 33.33, 'Somewhat satisfied': 66.67, 'Very satisfied': 100.0}, 
  '20': {'No': 0.0, 'Yes': 100.0}, 
  '21': {'Yes': 0.0, 'No': 100.0}, 
  '23': {'Very poor': 0.0, 'Poor': 16.67, 'Fair': 33.33, 'Good': 50.0, 'Very good': 66.67, 'Excellent': 83.33, 'The best': 100.0}, 
  '24': {'Definitely false': 0.0, 'Mostly false': 25.0, 'Don\'t know': 50.0, 'Mostly true': 75.0, 'Definitely true': 100.0}}
usr_prompt3: |
  You will given the **eng_kdqol.csv**, which contains responses from dialysis patients to the KDQOL survey.
  - For each physician's query, carefully select the relevant items from the KDQOL survey.
  - **Note**: You must provide the detailed description of why you selected the specific question for each physician's query.
  - **Note**: You must define a **dictionary whose keys are column names in the CSV and values are the corresponding keys in the <Score Mapping Dictionary>** (Question 17 and 22 are not included in the dictionary).
  - Write a Python code to map the responses of patients to the the corresponding scores.
  - Write a Python code to calculate the average score of the items related to the physician's queries.
  - If the answer for a question is `nan`, you should remove it when you calculate the average score of the answers.

  Here is a detailed description of **eng_kdqol.csv**, including information about rows, columns, data types, and the types of responses for each column.

    ---

    ## **eng_kdqol.csv** Description

    This dataset contains responses from dialysis patients to the KDQOL (Kidney Disease Quality of Life) survey. The data is organized such that:

    - **Rows**: Each row represents an individual patient, identified by a unique `id`. There are 565 patients (rows) in total.
    - **Columns**: Each column corresponds to a specific KDQOL survey item. The dataset contains a total of 82 columns:
      - The first column is the **Patient ID** (`id`).
      - The remaining columns represent the responses to 81 KDQOL survey items.

    ## Examples of Response Types

    Below are examples of the types of responses observed in the dataset for specific survey items:

    - **Column `1` (Object)**: This column asks about the patient's general health status. Sample responses include:
    - "Fair"
    - "Poor"
    - "Good"

    - **Column `2` (Object)**: This question relates to the patient's health compared to one year ago. Sample responses include:
    - "Somewhat better now than one year ago"
    - "About the same than one year ago"
    - "Much worse now than one year ago"

    - **Column `22` (Float64)**: This question involves a numeric value, likely representing a count or scaled measurement. Sample values include:
    - 8.0
    - 0.0
    - 4.0

    - **Columns `24a` and `24b` (Object)**: These columns relate to the patient's agreement with specific statements. Sample responses include:
    - "Definitely true"
    - "Mostly true"

    ---

  Finally, write Python code that provides the averaged scores to all the physician's questions in the **DataFrame** format:

  **Example Structure:**

  ```python
  import pandas as pd
  import numpy as np

  # Load the DataFrame containing all the patients' responses
  df = pd.read_csv("eng_kdqol.csv", na_values=[''], keep_default_na=False) # no need to modify this line, df.columns = ['id', '1', '2', '3a', '3b', '3c', '3d', '3e', '3f', '3g', '3h', '3i', '3j', '4a', '4b', '4c', '4d', '5a', '5b', '5c', '6', '7', '8', '9a', '9b', '9c', '9d', '9e', '9f', '9g', '9h', '9i', '10', '11a', '11b', '11c', '11d', '12a', '12b', '12c', '12d', '13a', '13b', '13c', '13d', '13e', '13f', '14a', '14b', '14c', '14d', '14e', '14f', '14g', '14h', '14i', '14j', '14k', '14l', '15a', '15b', '15c', '15d', '15e', '15f', '15g', '15h', '16', '16a', '16b', '17', '18a', '18b', '18c', '19a', '19b', '20', '21', '22', '23', '24a', '24b']

  (...)

  # Save the scores DataFrame to a CSV file
  scores_df.to_csv("scores_df.csv", index=False) # no need to modify this line
  ```